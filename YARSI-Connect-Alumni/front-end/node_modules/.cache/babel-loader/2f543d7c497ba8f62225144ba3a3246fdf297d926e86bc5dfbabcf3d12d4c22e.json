{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/YARSI-Connect-Alumni-main/YARSI-Connect-Alumni-main/YARSI-Connect-Alumni/front-end/src/pages/Beranda.js\",\n  _s = $RefreshSig$();\nimport \"../styles/beranda.css\";\nimport NavigationBar from '../components/NavigationBar';\nimport BerandaNews from '../components/BerandaNews';\nimport BerandaProgramAlumni from '../components/BerandaProgramAlumni';\nimport Footer from '../components/Footer';\nimport { getLatestEvents, getLatestNews, getLatestProgramAlumni } from '../api/Api';\nimport { useState, useEffect } from 'react';\nimport BerandaSlide from '../components/BerandaSlide';\nimport BerandaAcara from \"../components/BerandaAcara\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Beranda() {\n  _s();\n  const [beritaBeranda, setBeritaBeranda] = useState([]);\n  const [slidesData, setSlidesData] = useState([]);\n  const [eventsBeranda, setEventsBeranda] = useState([]);\n  const [programAlumniBeranda, setProgramAlumniBeranda] = useState([]);\n  useEffect(() => {\n    const fetchSlide = async () => {\n      try {\n        const response = await getLatestEvents();\n        const slidesArray = response.data.data;\n        if (Array.isArray(slidesArray)) {\n          const slidesData = slidesArray.map(item => ({\n            id: item.id,\n            src: item.image,\n            label: item.title,\n            caption: item.content\n          }));\n          setSlidesData(slidesData);\n        } else {\n          console.error(\"Data yang diterima bukan array:\", slidesArray);\n        }\n      } catch (error) {\n        console.error(\"Error fetching slide: \", error);\n      }\n    };\n    fetchSlide();\n    const fetchBerita = async () => {\n      try {\n        const response = await getLatestNews();\n        const beritaArray = response.data.data;\n        if (Array.isArray(beritaArray)) {\n          const beritaData = beritaArray.map(item => ({\n            id: item.id,\n            image: item.image,\n            authorName: item.authorName,\n            title: item.title,\n            content: item.content\n          }));\n          setBeritaBeranda(beritaData);\n        } else {\n          console.error(\"Data yang diterima bukan array: \", beritaArray);\n        }\n      } catch (error) {\n        console.error(\"Error fetching news: \", error);\n      }\n    };\n    fetchBerita();\n    const fetchEvents = async () => {\n      try {\n        const response = await getLatestEvents();\n        const eventsArray = response.data.data;\n        if (Array.isArray(eventsArray)) {\n          const eventsData = eventsArray.slice(0, 4).map(item => ({\n            id: item.id,\n            image: item.image,\n            authorName: item.authorName,\n            title: item.title,\n            createdAt: item.createdAt,\n            date: item.date\n          }));\n          setEventsBeranda(eventsData);\n        } else {\n          console.error(\"Data yang diterima bukan array:\", eventsArray);\n        }\n      } catch (error) {\n        console.error(\"Error fetching events: \", error);\n      }\n    };\n    fetchEvents();\n    const fetchProgramAlumni = async () => {\n      try {\n        const response = await getLatestProgramAlumni();\n        const programAlumniArray = response.data.data;\n        if (Array.isArray(programAlumniArray)) {\n          const programAlumniData = programAlumniArray.map(item => ({\n            id: item.id,\n            image: item.image,\n            authorName: item.authorName,\n            title: item.title,\n            category: item.category,\n            content: item.description\n          }));\n          setProgramAlumniBeranda(programAlumniData);\n        } else {\n          console.error(\"Data yang diterima bukan array:\", programAlumniArray);\n        }\n      } catch (error) {\n        console.error(\"Error fetching events: \", error);\n      }\n    };\n    fetchProgramAlumni();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavigationBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(BerandaSlide, {\n      images: slidesData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(BerandaNews, {\n      berita: beritaBeranda\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(BerandaAcara, {\n      acara: eventsBeranda\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(BerandaProgramAlumni, {\n      programAlumni: programAlumniBeranda\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 9\n  }, this);\n}\n_s(Beranda, \"zn3uSMiTssWJXDCva0KBO4m0wn8=\");\n_c = Beranda;\nexport default Beranda;\nvar _c;\n$RefreshReg$(_c, \"Beranda\");","map":{"version":3,"names":["NavigationBar","BerandaNews","BerandaProgramAlumni","Footer","getLatestEvents","getLatestNews","getLatestProgramAlumni","useState","useEffect","BerandaSlide","BerandaAcara","jsxDEV","_jsxDEV","Beranda","_s","beritaBeranda","setBeritaBeranda","slidesData","setSlidesData","eventsBeranda","setEventsBeranda","programAlumniBeranda","setProgramAlumniBeranda","fetchSlide","response","slidesArray","data","Array","isArray","map","item","id","src","image","label","title","caption","content","console","error","fetchBerita","beritaArray","beritaData","authorName","fetchEvents","eventsArray","eventsData","slice","createdAt","date","fetchProgramAlumni","programAlumniArray","programAlumniData","category","description","children","fileName","_jsxFileName","lineNumber","columnNumber","images","berita","acara","programAlumni","_c","$RefreshReg$"],"sources":["/home/ubuntu/YARSI-Connect-Alumni-main/YARSI-Connect-Alumni-main/YARSI-Connect-Alumni/front-end/src/pages/Beranda.js"],"sourcesContent":["import \"../styles/beranda.css\";\nimport NavigationBar from '../components/NavigationBar';\nimport BerandaNews from '../components/BerandaNews';\nimport BerandaProgramAlumni from '../components/BerandaProgramAlumni';\nimport Footer from '../components/Footer';\nimport { getLatestEvents, getLatestNews, getLatestProgramAlumni} from '../api/Api';\nimport { useState, useEffect } from 'react';\nimport BerandaSlide from '../components/BerandaSlide';\nimport BerandaAcara from \"../components/BerandaAcara\";\n\nfunction Beranda() {\n    const [beritaBeranda, setBeritaBeranda] = useState([]);\n    const [slidesData, setSlidesData] = useState([]);\n    const [eventsBeranda, setEventsBeranda] = useState([]);\n    const [programAlumniBeranda, setProgramAlumniBeranda] = useState([]);\n\n    useEffect(() => {\n        const fetchSlide = async () => {\n            try {\n                const response = await getLatestEvents();\n                const slidesArray = response.data.data;\n\n                if (Array.isArray(slidesArray)) {\n                    const slidesData = slidesArray.map(item => ({\n                        id: item.id,\n                        src: item.image,\n                        label: item.title,\n                        caption: item.content\n                    }));\n                    setSlidesData(slidesData);\n                } else {\n                    console.error(\"Data yang diterima bukan array:\", slidesArray);\n                }\n            } catch (error) {\n                console.error(\"Error fetching slide: \", error);\n            }\n        };\n        fetchSlide();\n\n        const fetchBerita = async () => {\n            try {\n                const response = await getLatestNews();\n                const beritaArray = response.data.data;\n\n                if (Array.isArray(beritaArray)) {\n                    const beritaData = beritaArray.map(item => ({\n                        id: item.id,\n                        image: item.image,\n                        authorName: item.authorName,\n                        title: item.title,\n                        content: item.content\n                    }));\n                    setBeritaBeranda(beritaData);\n                } else {\n                    console.error(\"Data yang diterima bukan array: \", beritaArray);\n                }\n            } catch (error) {\n                console.error(\"Error fetching news: \", error);\n            }\n        };\n        fetchBerita();\n\n        const fetchEvents = async () => {\n            try {\n                const response = await getLatestEvents();\n                const eventsArray = response.data.data;\n\n                if (Array.isArray(eventsArray)) {\n                    const eventsData = eventsArray.slice(0, 4).map(item => ({\n                        id: item.id,\n                        image: item.image,\n                        authorName: item.authorName,\n                        title: item.title,\n                        createdAt: item.createdAt,\n                        date:item.date\n                    }));\n                    setEventsBeranda(eventsData);\n                } else {\n                    console.error(\"Data yang diterima bukan array:\", eventsArray);\n                }\n            } catch (error) {\n                console.error(\"Error fetching events: \", error);\n            }\n        };\n        fetchEvents();\n\n        const fetchProgramAlumni = async () => {\n            try {\n                const response = await getLatestProgramAlumni();\n                const programAlumniArray = response.data.data;\n\n                if (Array.isArray(programAlumniArray)) {\n                    const programAlumniData = programAlumniArray.map(item => ({\n                        id: item.id,\n                        image: item.image,\n                        authorName: item.authorName,\n                        title: item.title,\n                        category: item.category,\n                        content: item.description\n                    }));\n                    setProgramAlumniBeranda(programAlumniData);\n                } else {\n                    console.error(\"Data yang diterima bukan array:\", programAlumniArray);\n                }\n            } catch (error) {\n                console.error(\"Error fetching events: \", error);\n            }\n        };\n        fetchProgramAlumni();\n    }, []);\n\n\n    return (\n        <div >\n            <NavigationBar />\n            <BerandaSlide images={slidesData} />\n            <BerandaNews berita={beritaBeranda} />\n            <BerandaAcara acara={eventsBeranda} />\n            <BerandaProgramAlumni programAlumni={programAlumniBeranda} />\n            <Footer />\n        </div>\n    );\n}\n\nexport default Beranda;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}