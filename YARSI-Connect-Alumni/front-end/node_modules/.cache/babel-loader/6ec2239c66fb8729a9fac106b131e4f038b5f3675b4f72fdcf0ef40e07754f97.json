{"ast":null,"code":"var _jsxFileName = \"C:\\\\Koneksi alumni\\\\YARSI-Connect-Alumni-main\\\\YARSI-Connect-Alumni-main\\\\YARSI-Connect Alumni\\\\front-end\\\\src\\\\pages\\\\Acara.js\",\n  _s = $RefreshSig$();\nimport NavigationBar from '../components/NavigationBar';\nimport \"../styles/acara.css\";\nimport AcaraCards from '../components/AcaraCards';\nimport { useState, useEffect } from 'react';\nimport { getEvents } from '../api/Api';\nimport Footer from '../components/Footer';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Acara() {\n  _s();\n  const [acara, setAcara] = useState([]);\n  useEffect(() => {\n    const fetchAcara = async () => {\n      try {\n        const response = await getEvents();\n        const acaraArray = response.data.data;\n        if (Array.isArray(acaraArray)) {\n          const acaraData = acaraArray.map(item => ({\n            id: item.id,\n            image: item.image,\n            author: item.author,\n            authorId: item.authorId,\n            title: item.title,\n            description: item.description,\n            createdAt: item.createdAt\n          }));\n          setAcara(acaraData); // Update state dengan data berita\n        } else {\n          console.error(\"Data yang diterima bukan array:\", acaraArray);\n        }\n      } catch (error) {\n        console.error(\"Error fetching news: \", error);\n      }\n    };\n    fetchAcara();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavigationBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AcaraCards, {\n      acara: acara,\n      columnCount: 3\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(Acara, \"sW16csBLJl16HB9E4dvibe8p94o=\");\n_c = Acara;\nexport default Acara;\nvar _c;\n$RefreshReg$(_c, \"Acara\");","map":{"version":3,"names":["NavigationBar","AcaraCards","useState","useEffect","getEvents","Footer","jsxDEV","_jsxDEV","Fragment","_Fragment","Acara","_s","acara","setAcara","fetchAcara","response","acaraArray","data","Array","isArray","acaraData","map","item","id","image","author","authorId","title","description","createdAt","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","columnCount","_c","$RefreshReg$"],"sources":["C:/Koneksi alumni/YARSI-Connect-Alumni-main/YARSI-Connect-Alumni-main/YARSI-Connect Alumni/front-end/src/pages/Acara.js"],"sourcesContent":["import NavigationBar from '../components/NavigationBar';\nimport \"../styles/acara.css\"\nimport AcaraCards from '../components/AcaraCards';\nimport { useState, useEffect } from 'react';\nimport {  getEvents } from '../api/Api';\nimport Footer from '../components/Footer';\n\nfunction Acara() {\n    const [acara, setAcara] = useState([]);\n    useEffect(() => {\n        const fetchAcara = async () => {\n            try {\n                const response = await getEvents(); \n                const acaraArray = response.data.data;\n    \n                if (Array.isArray(acaraArray)) {\n                    const acaraData = acaraArray.map(item => ({\n                        id:item.id,\n                        image: item.image,\n                        author: item.author,\n                        authorId: item.authorId,\n                        title: item.title,\n                        description: item.description,\n                        createdAt: item.createdAt,\n                    }));\n                    setAcara(acaraData); // Update state dengan data berita\n                } else {\n                    console.error(\"Data yang diterima bukan array:\", acaraArray);\n                }\n            } catch (error) {\n                console.error(\"Error fetching news: \", error);\n            }\n    \n        };\n    \n        fetchAcara();\n    }, []);\n\n    return (\n        <>\n            <NavigationBar />\n            <AcaraCards acara={acara} columnCount={3} />\n            <Footer/>\n        </>\n    );\n}\n\nexport default Acara;"],"mappings":";;AAAA,OAAOA,aAAa,MAAM,6BAA6B;AACvD,OAAO,qBAAqB;AAC5B,OAAOC,UAAU,MAAM,0BAA0B;AACjD,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAAUC,SAAS,QAAQ,YAAY;AACvC,OAAOC,MAAM,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1C,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtCC,SAAS,CAAC,MAAM;IACZ,MAAMW,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC3B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMX,SAAS,CAAC,CAAC;QAClC,MAAMY,UAAU,GAAGD,QAAQ,CAACE,IAAI,CAACA,IAAI;QAErC,IAAIC,KAAK,CAACC,OAAO,CAACH,UAAU,CAAC,EAAE;UAC3B,MAAMI,SAAS,GAAGJ,UAAU,CAACK,GAAG,CAACC,IAAI,KAAK;YACtCC,EAAE,EAACD,IAAI,CAACC,EAAE;YACVC,KAAK,EAAEF,IAAI,CAACE,KAAK;YACjBC,MAAM,EAAEH,IAAI,CAACG,MAAM;YACnBC,QAAQ,EAAEJ,IAAI,CAACI,QAAQ;YACvBC,KAAK,EAAEL,IAAI,CAACK,KAAK;YACjBC,WAAW,EAAEN,IAAI,CAACM,WAAW;YAC7BC,SAAS,EAAEP,IAAI,CAACO;UACpB,CAAC,CAAC,CAAC;UACHhB,QAAQ,CAACO,SAAS,CAAC,CAAC,CAAC;QACzB,CAAC,MAAM;UACHU,OAAO,CAACC,KAAK,CAAC,iCAAiC,EAAEf,UAAU,CAAC;QAChE;MACJ,CAAC,CAAC,OAAOe,KAAK,EAAE;QACZD,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MACjD;IAEJ,CAAC;IAEDjB,UAAU,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIP,OAAA,CAAAE,SAAA;IAAAuB,QAAA,gBACIzB,OAAA,CAACP,aAAa;MAAAiC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjB7B,OAAA,CAACN,UAAU;MAACW,KAAK,EAAEA,KAAM;MAACyB,WAAW,EAAE;IAAE;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC5C7B,OAAA,CAACF,MAAM;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA,eACX,CAAC;AAEX;AAACzB,EAAA,CAtCQD,KAAK;AAAA4B,EAAA,GAAL5B,KAAK;AAwCd,eAAeA,KAAK;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}