{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/YARSI-Connect-Alumni-main/YARSI-Connect-Alumni-main/YARSI-Connect Alumni/front-end/src/components/ProtectedRoutes.js\",\n  _s = $RefreshSig$();\nimport { Navigate, Outlet } from \"react-router-dom\";\nimport { useGlobal } from \"../context/GlobalContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoutes = ({\n  allowedRoles\n}) => {\n  _s();\n  const {\n    globalData\n  } = useGlobal();\n  const {\n    role\n  } = globalData;\n\n  // Jika role tidak ditemukan di globalData atau localStorage, arahkan ke halaman login\n  if (!role) {\n    const storedRole = localStorage.getItem(\"role\");\n    if (!storedRole) {\n      return /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/masuk\",\n        replace: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 14\n      }, this); // Redirect ke halaman login jika role tidak ada\n    }\n    // Jika role ditemukan di localStorage, set role ke globalData\n    globalData.role = storedRole;\n  }\n\n  // Periksa apakah role pengguna termasuk dalam allowedRoles\n  if (allowedRoles && !allowedRoles.includes(role)) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/akses-ditolak\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 10\n  }, this);\n};\n_s(ProtectedRoutes, \"DV5fbzEaAXu3qZdUbrzIVdsrcx0=\", false, function () {\n  return [useGlobal];\n});\n_c = ProtectedRoutes;\nexport default ProtectedRoutes;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoutes\");","map":{"version":3,"names":["Navigate","Outlet","useGlobal","jsxDEV","_jsxDEV","ProtectedRoutes","allowedRoles","_s","globalData","role","storedRole","localStorage","getItem","to","replace","fileName","_jsxFileName","lineNumber","columnNumber","includes","_c","$RefreshReg$"],"sources":["/home/ubuntu/YARSI-Connect-Alumni-main/YARSI-Connect-Alumni-main/YARSI-Connect Alumni/front-end/src/components/ProtectedRoutes.js"],"sourcesContent":["import { Navigate, Outlet } from \"react-router-dom\";\nimport { useGlobal } from \"../context/GlobalContext\";\n\nconst ProtectedRoutes = ({ allowedRoles }) => {\n  const { globalData } = useGlobal();\n  const { role } = globalData;\n\n  // Jika role tidak ditemukan di globalData atau localStorage, arahkan ke halaman login\n  if (!role) {\n    const storedRole = localStorage.getItem(\"role\");\n    if (!storedRole) {\n      return <Navigate to=\"/masuk\" replace />; // Redirect ke halaman login jika role tidak ada\n    }\n    // Jika role ditemukan di localStorage, set role ke globalData\n    globalData.role = storedRole;\n  }\n\n  // Periksa apakah role pengguna termasuk dalam allowedRoles\n  if (allowedRoles && !allowedRoles.includes(role)) {\n    return <Navigate to=\"/akses-ditolak\" replace />;\n  }\n\n  return <Outlet />;\n};\n\nexport default ProtectedRoutes;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,MAAM,QAAQ,kBAAkB;AACnD,SAASC,SAAS,QAAQ,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,eAAe,GAAGA,CAAC;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM;IAAEC;EAAW,CAAC,GAAGN,SAAS,CAAC,CAAC;EAClC,MAAM;IAAEO;EAAK,CAAC,GAAGD,UAAU;;EAE3B;EACA,IAAI,CAACC,IAAI,EAAE;IACT,MAAMC,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC/C,IAAI,CAACF,UAAU,EAAE;MACf,oBAAON,OAAA,CAACJ,QAAQ;QAACa,EAAE,EAAC,QAAQ;QAACC,OAAO;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,CAAC,CAAC;IAC3C;IACA;IACAV,UAAU,CAACC,IAAI,GAAGC,UAAU;EAC9B;;EAEA;EACA,IAAIJ,YAAY,IAAI,CAACA,YAAY,CAACa,QAAQ,CAACV,IAAI,CAAC,EAAE;IAChD,oBAAOL,OAAA,CAACJ,QAAQ;MAACa,EAAE,EAAC,gBAAgB;MAACC,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACjD;EAEA,oBAAOd,OAAA,CAACH,MAAM;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACnB,CAAC;AAACX,EAAA,CApBIF,eAAe;EAAA,QACIH,SAAS;AAAA;AAAAkB,EAAA,GAD5Bf,eAAe;AAsBrB,eAAeA,eAAe;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}