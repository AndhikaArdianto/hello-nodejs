{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/YARSI-Connect-Alumni-main/YARSI-Connect-Alumni-main/YARSI-Connect-Alumni/front-end/src/pages/BagikanProgramAlumni.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { getVerifiedProgramAlumni } from \"../api/Api\";\nimport TabelBagikanProgramAlumni from \"../components/TabelBagikanProgramAlumni\";\nimport { Container } from \"react-bootstrap\";\nimport { useGlobal } from \"../context/GlobalContext\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction BagikanProgramAlumni() {\n  _s();\n  const [program, setProgram] = useState([]);\n  const [enabledStatus, setEnabledStatus] = useState({});\n  const {\n    globalData\n  } = useGlobal();\n  const username = globalData.username;\n  useEffect(() => {\n    const fetchProgram = async () => {\n      try {\n        const response = await getVerifiedProgramAlumni();\n        const programArray = response.data.data;\n        if (Array.isArray(programArray)) {\n          const programData = programArray.map(item => ({\n            id: item.id,\n            image: item.image,\n            authorId: item.authorId,\n            title: item.title,\n            content: item.description,\n            createdAt: item.createdAt,\n            category: item.category,\n            authorName: item.author.username,\n            status: item.AlumniProgramStatus,\n            isActive: item.isActive\n          }));\n          const storedStatus = JSON.parse(localStorage.getItem(\"enabledStatus\")) || {};\n          const updatedStatus = {};\n          programData.forEach(item => {\n            var _storedStatus$item$id;\n            updatedStatus[item.id] = (_storedStatus$item$id = storedStatus[item.id]) !== null && _storedStatus$item$id !== void 0 ? _storedStatus$item$id : item.isActive;\n          });\n          setEnabledStatus(updatedStatus);\n          setProgram(programData);\n        } else {\n          console.error(\"Data yang diterima bukan array:\", programArray);\n        }\n      } catch (error) {\n        console.error(\"Error fetching program: \", error);\n      }\n    };\n    fetchProgram();\n  }, [username]);\n  useEffect(() => {\n    localStorage.setItem(\"enabledStatus\", JSON.stringify(enabledStatus));\n  }, [enabledStatus]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-center\",\n        children: \"BAGIKAN PROGRAM ALUMNI\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        className: \"custom-hr\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TabelBagikanProgramAlumni, {\n      program: program,\n      enabledStatus: enabledStatus,\n      setEnabledStatus: setEnabledStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(BagikanProgramAlumni, \"v3m2CefrfjghHHYGWrj+VlfBRTE=\", false, function () {\n  return [useGlobal];\n});\n_c = BagikanProgramAlumni;\nexport default BagikanProgramAlumni;\nvar _c;\n$RefreshReg$(_c, \"BagikanProgramAlumni\");","map":{"version":3,"names":["useState","useEffect","getVerifiedProgramAlumni","TabelBagikanProgramAlumni","Container","useGlobal","jsxDEV","_jsxDEV","Fragment","_Fragment","BagikanProgramAlumni","_s","program","setProgram","enabledStatus","setEnabledStatus","globalData","username","fetchProgram","response","programArray","data","Array","isArray","programData","map","item","id","image","authorId","title","content","description","createdAt","category","authorName","author","status","AlumniProgramStatus","isActive","storedStatus","JSON","parse","localStorage","getItem","updatedStatus","forEach","_storedStatus$item$id","console","error","setItem","stringify","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/ubuntu/YARSI-Connect-Alumni-main/YARSI-Connect-Alumni-main/YARSI-Connect-Alumni/front-end/src/pages/BagikanProgramAlumni.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { getVerifiedProgramAlumni } from \"../api/Api\";\nimport TabelBagikanProgramAlumni from \"../components/TabelBagikanProgramAlumni\";\nimport { Container } from \"react-bootstrap\";\nimport { useGlobal } from \"../context/GlobalContext\";\n\nfunction BagikanProgramAlumni() {\n  const [program, setProgram] = useState([]);\n  const [enabledStatus, setEnabledStatus] = useState({});\n\n  const { globalData } = useGlobal(); \n  const username = globalData.username; \n\n  useEffect(() => {\n    const fetchProgram = async () => {\n      try {\n        const response = await getVerifiedProgramAlumni(); \n  \n        const programArray = response.data.data;\n  \n        if (Array.isArray(programArray)) {\n          const programData = programArray.map((item) => ({\n            id: item.id,\n            image: item.image,\n            authorId: item.authorId,\n            title: item.title,\n            content: item.description,\n            createdAt: item.createdAt,\n            category: item.category,\n            authorName: item.author.username,\n            status: item.AlumniProgramStatus,\n            isActive: item.isActive, \n          }));\n  \n          const storedStatus = JSON.parse(localStorage.getItem(\"enabledStatus\")) || {};\n          \n          const updatedStatus = {};\n          programData.forEach((item) => {\n            updatedStatus[item.id] = storedStatus[item.id] ?? item.isActive;\n          });\n  \n          setEnabledStatus(updatedStatus);\n          setProgram(programData); \n        } else {\n          console.error(\"Data yang diterima bukan array:\", programArray);\n        }\n      } catch (error) {\n        console.error(\"Error fetching program: \", error);\n      }\n    };\n  \n    fetchProgram();\n  }, [username]);\n  \n  useEffect(() => {\n    localStorage.setItem(\"enabledStatus\", JSON.stringify(enabledStatus));\n  }, [enabledStatus]);\n  \n\n  return (\n    <>\n      <Container>\n        <h1 className=\"text-center\">BAGIKAN PROGRAM ALUMNI</h1>\n        <hr className=\"custom-hr\" />\n      </Container>\n      <TabelBagikanProgramAlumni\n        program={program}\n        enabledStatus={enabledStatus}\n        setEnabledStatus={setEnabledStatus}\n      />\n    </>\n  );\n}\n\nexport default BagikanProgramAlumni;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}