{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/YARSI-Connect-Alumni-main/YARSI-Connect-Alumni-main/YARSI-Connect Alumni/front-end/src/pages/BagikanAcara.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { getVerifiedEvents } from \"../api/Api\";\nimport { useGlobal } from \"../context/GlobalContext\";\nimport TabelBagikanAcara from \"../components/TabelBagikanAcara\";\nimport { Container } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction BagikanAcara() {\n  _s();\n  const {\n    globalData\n  } = useGlobal();\n  const username = globalData.username;\n  const [acara, setAcara] = useState([]);\n  const [enabledStatus, setEnabledStatus] = useState({});\n  useEffect(() => {\n    const fetchAcara = async () => {\n      try {\n        const response = await getVerifiedEvents();\n        const acaraArray = response.data.data;\n        if (Array.isArray(acaraArray)) {\n          const acaraData = acaraArray.map(item => ({\n            id: item.id,\n            title: item.title,\n            image: item.image,\n            content: item.description,\n            date: item.date,\n            isActive: item.isActive,\n            authorName: item.author.username\n          }));\n          const storedStatus = JSON.parse(localStorage.getItem(\"enabledStatus\")) || {};\n          const updatedStatus = {};\n          acaraData.forEach(item => {\n            var _storedStatus$item$id;\n            updatedStatus[item.id] = (_storedStatus$item$id = storedStatus[item.id]) !== null && _storedStatus$item$id !== void 0 ? _storedStatus$item$id : item.isActive;\n          });\n          setEnabledStatus(updatedStatus);\n          setAcara(acaraData);\n        }\n      } catch (error) {\n        console.error(\"Error fetching acara: \", error);\n      }\n    };\n    fetchAcara();\n  }, [username]);\n  useEffect(() => {\n    localStorage.setItem(\"enabledStatus\", JSON.stringify(enabledStatus));\n  }, [enabledStatus]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-center\",\n        children: \"BAGIKAN ACARA\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        className: \"custom-hr\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TabelBagikanAcara, {\n      acara: acara,\n      enabledStatus: enabledStatus,\n      setEnabledStatus: setEnabledStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(BagikanAcara, \"UXOchFgMkERH3EAoIp/BPsDkYEg=\", false, function () {\n  return [useGlobal];\n});\n_c = BagikanAcara;\nexport default BagikanAcara;\nvar _c;\n$RefreshReg$(_c, \"BagikanAcara\");","map":{"version":3,"names":["useState","useEffect","getVerifiedEvents","useGlobal","TabelBagikanAcara","Container","jsxDEV","_jsxDEV","Fragment","_Fragment","BagikanAcara","_s","globalData","username","acara","setAcara","enabledStatus","setEnabledStatus","fetchAcara","response","acaraArray","data","Array","isArray","acaraData","map","item","id","title","image","content","description","date","isActive","authorName","author","storedStatus","JSON","parse","localStorage","getItem","updatedStatus","forEach","_storedStatus$item$id","error","console","setItem","stringify","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/ubuntu/YARSI-Connect-Alumni-main/YARSI-Connect-Alumni-main/YARSI-Connect Alumni/front-end/src/pages/BagikanAcara.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { getVerifiedEvents } from \"../api/Api\";\nimport { useGlobal } from \"../context/GlobalContext\";\nimport TabelBagikanAcara from \"../components/TabelBagikanAcara\";\nimport { Container } from \"react-bootstrap\";\n\nfunction BagikanAcara() {\n  const { globalData } = useGlobal();\n  const username = globalData.username;\n\n  const [acara, setAcara] = useState([]);\n  const [enabledStatus, setEnabledStatus] = useState({});\n\n  useEffect(() => {\n    const fetchAcara = async () => {\n      try {\n        const response = await getVerifiedEvents();\n        const acaraArray = response.data.data;\n\n        if (Array.isArray(acaraArray)) {\n          const acaraData = acaraArray.map((item) => ({\n            id: item.id,\n            title: item.title,\n            image: item.image,\n            content: item.description,\n            date: item.date,\n            isActive: item.isActive,\n            authorName: item.author.username,\n          }));\n\n          const storedStatus =\n            JSON.parse(localStorage.getItem(\"enabledStatus\")) || {};\n\n          const updatedStatus = {};\n          acaraData.forEach((item) => {\n            updatedStatus[item.id] = storedStatus[item.id] ?? item.isActive;\n          });\n\n          setEnabledStatus(updatedStatus);\n          setAcara(acaraData);\n        }\n      } catch (error) {\n        console.error(\"Error fetching acara: \", error);\n      }\n    };\n\n    fetchAcara();\n  }, [username]);\n\n  useEffect(() => {\n    localStorage.setItem(\"enabledStatus\", JSON.stringify(enabledStatus));\n  }, [enabledStatus]);\n\n  return (\n    <>\n      <Container>\n        <h1 className=\"text-center\">BAGIKAN ACARA</h1>\n        <hr className=\"custom-hr\" />\n      </Container>\n      <TabelBagikanAcara\n        acara={acara}\n        enabledStatus={enabledStatus}\n        setEnabledStatus={setEnabledStatus}\n      />\n    </>\n  );\n}\n\nexport default BagikanAcara;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}