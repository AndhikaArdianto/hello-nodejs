{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/YARSI-Connect-Alumni-main/YARSI-Connect-Alumni-main/YARSI-Connect Alumni/front-end/src/context/GlobalContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState, useEffect } from \"react\";\nimport axios from 'axios';\n\n// Membuat Context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GlobalContext = /*#__PURE__*/createContext();\n\n// Provider untuk menyediakan data global\nexport const GlobalProvider = ({\n  children\n}) => {\n  _s();\n  const [globalData, setGlobalData] = useState({\n    role: \"\",\n    username: \"\",\n    id: \"\",\n    showLogoutModal: false\n  });\n\n  // Memuat data dari localStorage jika ada\n  useEffect(() => {\n    const storedRole = localStorage.getItem('role');\n    const storedUsername = localStorage.getItem('username');\n    const storedId = localStorage.getItem('id');\n    if (storedRole) {\n      setGlobalData(prevData => ({\n        ...prevData,\n        role: storedRole,\n        username: storedUsername || \"\",\n        id: storedId || \"\"\n      }));\n    }\n  }, []);\n\n  // Fungsi untuk update global data dan localStorage\n  const updateGlobalData = (key, value) => {\n    setGlobalData(prevData => ({\n      ...prevData,\n      [key]: value\n    }));\n    localStorage.setItem(key, value);\n  };\n\n  // Fungsi untuk clear global data\n  const clearGlobalData = () => {\n    setGlobalData({\n      role: \"\",\n      username: \"\",\n      id: \"\",\n      showLogoutModal: false\n    });\n\n    // Hapus data dari localStorage\n    localStorage.removeItem('role');\n    localStorage.removeItem('username');\n    localStorage.removeItem('id');\n    localStorage.removeItem('token'); // Hapus token jika ada\n  };\n  return /*#__PURE__*/_jsxDEV(GlobalContext.Provider, {\n    value: {\n      globalData,\n      updateGlobalData,\n      clearGlobalData\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n\n// Hook untuk menggunakan data Global\n_s(GlobalProvider, \"rEUHbllESjvdPtdkPqucighOGlI=\");\n_c = GlobalProvider;\nexport const useGlobal = () => {\n  _s2();\n  return useContext(GlobalContext);\n};\n\n// Fungsi untuk login dan menyimpan data ke GlobalContext\n_s2(useGlobal, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const loginUser = async (credentials, updateGlobalData) => {\n  try {\n    const response = await axios.post('/api/login', credentials);\n    const {\n      data\n    } = response;\n\n    // Simpan data ke GlobalContext\n    updateGlobalData('role', data.user.role.name);\n    updateGlobalData('username', data.user.username);\n    updateGlobalData('id', data.user.id);\n\n    // Simpan token di localStorage juga jika diperlukan\n    localStorage.setItem('token', data.token);\n  } catch (error) {\n    console.error(\"Login failed:\", error);\n  }\n};\nvar _c;\n$RefreshReg$(_c, \"GlobalProvider\");","map":{"version":3,"names":["createContext","useContext","useState","useEffect","axios","jsxDEV","_jsxDEV","GlobalContext","GlobalProvider","children","_s","globalData","setGlobalData","role","username","id","showLogoutModal","storedRole","localStorage","getItem","storedUsername","storedId","prevData","updateGlobalData","key","value","setItem","clearGlobalData","removeItem","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useGlobal","_s2","loginUser","credentials","response","post","data","user","name","token","error","console","$RefreshReg$"],"sources":["/home/ubuntu/YARSI-Connect-Alumni-main/YARSI-Connect-Alumni-main/YARSI-Connect Alumni/front-end/src/context/GlobalContext.js"],"sourcesContent":["import { createContext, useContext, useState, useEffect } from \"react\";\nimport axios from 'axios';\n\n// Membuat Context\nconst GlobalContext = createContext();\n\n// Provider untuk menyediakan data global\nexport const GlobalProvider = ({ children }) => {\n    const [globalData, setGlobalData] = useState({\n        role: \"\",\n        username: \"\",\n        id: \"\", \n        showLogoutModal: false,\n    });\n\n    // Memuat data dari localStorage jika ada\n    useEffect(() => {\n        const storedRole = localStorage.getItem('role');\n        const storedUsername = localStorage.getItem('username');\n        const storedId = localStorage.getItem('id');\n\n        if (storedRole) {\n            setGlobalData((prevData) => ({\n                ...prevData,\n                role: storedRole,\n                username: storedUsername || \"\",\n                id: storedId || \"\",\n            }));\n        }\n    }, []);\n\n    // Fungsi untuk update global data dan localStorage\n    const updateGlobalData = (key, value) => {\n        setGlobalData((prevData) => ({\n            ...prevData,\n            [key]: value,\n        }));\n        localStorage.setItem(key, value);\n    };\n\n    // Fungsi untuk clear global data\n    const clearGlobalData = () => {\n        setGlobalData({\n            role: \"\",\n            username: \"\",\n            id: \"\",\n            showLogoutModal: false,\n        });\n\n        // Hapus data dari localStorage\n        localStorage.removeItem('role');\n        localStorage.removeItem('username');\n        localStorage.removeItem('id');\n        localStorage.removeItem('token'); // Hapus token jika ada\n    };\n\n    return (\n        <GlobalContext.Provider value={{ globalData, updateGlobalData, clearGlobalData }}>\n            {children}\n        </GlobalContext.Provider>\n    );\n};\n\n// Hook untuk menggunakan data Global\nexport const useGlobal = () => useContext(GlobalContext);\n\n// Fungsi untuk login dan menyimpan data ke GlobalContext\nexport const loginUser = async (credentials, updateGlobalData) => {\n    try {\n        const response = await axios.post('/api/login', credentials);\n        const { data } = response;\n\n        // Simpan data ke GlobalContext\n        updateGlobalData('role', data.user.role.name);\n        updateGlobalData('username', data.user.username);\n        updateGlobalData('id', data.user.id);\n\n        // Simpan token di localStorage juga jika diperlukan\n        localStorage.setItem('token', data.token);\n    } catch (error) {\n        console.error(\"Login failed:\", error);\n    }\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}